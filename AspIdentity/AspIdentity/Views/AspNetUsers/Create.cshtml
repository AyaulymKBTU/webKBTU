@model AspIdentity.Models.DTO.UserDTO

<div class="col-md-9" style="background-color:white">
    <h4>CREATE USER</h4>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal" style="border-style:ridge">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @*@Html.LabelFor(model => Model.User.Id, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.HiddenFor(model => Model.User.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="padding-top:10px;margin-top:15px;">
                @Html.LabelFor(model => Model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight:400 !important;text-transform:uppercase" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight:400 !important;text-transform:uppercase" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => Model.User.Level, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.HiddenFor(model => Model.User.Level, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.Level, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => Model.User.JoinDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight:400 !important;text-transform:uppercase" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.JoinDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.JoinDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => Model.User.EmailConfirmed)
                        @Html.ValidationMessageFor(model => Model.User.EmailConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @{string PASSWORD = "";}
                @Html.LabelFor(model => PASSWORD, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight:400 !important;text-transform:uppercase" })
                <div class="col-md-10">

                    @Html.EditorFor(model => Model.User.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.SecurityStamp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => Model.User.PhoneNumberConfirmed)
                        @Html.ValidationMessageFor(model => Model.User.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => Model.User.TwoFactorEnabled)
                        @Html.ValidationMessageFor(model => Model.User.TwoFactorEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.LockoutEndDateUtc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => Model.User.LockoutEnabled)
                        @Html.ValidationMessageFor(model => Model.User.LockoutEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div style="display:none" class="form-group">
                @Html.LabelFor(model => Model.User.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => Model.User.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.AccessFailedCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-weight:400 !important;text-transform:uppercase" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.User.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <hr>
                    <h5 style="margin-left:5px">ROLES</h5>
                    <table class="table">


                        @foreach (var item in Model.Roles)
            {
            <tr>
                <td>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DisplayFor(modelItem => item.Key)

                            @*<div class="checkbox">*@

                            <input style="float:right; height:20px;width:20px" type="checkbox"
                                   class="inp"
                                   name="@("Roles[" + item.Key + "]")"
                                   value="@item.Key" @(item.Value ? "checked=\"checked\"" : "")>
                            <button id="@item.Key" style="display:none" class="cheb" data-url='@Url.Action("des", "aspnetusers")' value="@item.Key"></button>

                            @*</div>*@
                        </div>
                    </div>
                </td>
            </tr>

            }
                    </table>
                    <hr>
                    <h5 style="margin-left:5px">PROJECTS</h5>
                    <div id="users" style="border-style:ridge;min-height:30px"></div>
                    <hr>

                    <div class="form-group" style="float:right;padding-top:10px">

                        <div>
                            @Html.ActionLink("CANCEL", "Users","Projects", null, new { @class = "btn btn-default", @style = "border-style:outset" })

                            <input type="submit" value="CREATE" class="btn btn-default" style="border-style:outset" />
                        </div>
                    </div>
                    }
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".inp").on('change', function () {
            var as = '#' + $(this).attr('value');

            $(as).trigger('click', $(this).attr('value'));
        });
        $('.cheb').on('click', function (evt) {

            evt.preventDefault();
            evt.stopPropagation();

            var $users = $('#users'),
                url = $(this).data('url');
            val = $(this).attr('id');
            console.log(val);

            $.ajax({
                type: 'POST',
                url: url,
                data: '{"S":"' + val + '"}',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (result) {

                    $("#users").html(result["S"]);
                    //$("#users").html(result);
                }
            });

        });
    </script>
}
